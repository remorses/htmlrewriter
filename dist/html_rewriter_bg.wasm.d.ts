/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_endtag_free: (a: number, b: number) => void;
export const endtag_name: (a: number, b: number) => void;
export const endtag_set_name: (a: number, b: number, c: number, d: number) => void;
export const endtag_before: (a: number, b: number, c: number, d: number, e: number) => void;
export const endtag_after: (a: number, b: number, c: number, d: number, e: number) => void;
export const endtag_remove: (a: number, b: number) => void;
export const __wbg_htmlrewriter_free: (a: number, b: number) => void;
export const htmlrewriter_new: (a: number, b: number) => number;
export const htmlrewriter_on: (a: number, b: number, c: number, d: number, e: number) => void;
export const htmlrewriter_onDocument: (a: number, b: number, c: number) => void;
export const htmlrewriter_write: (a: number, b: number, c: number, d: number) => void;
export const htmlrewriter_end: (a: number, b: number) => void;
export const htmlrewriter_asyncify_stack_ptr: (a: number) => number;
export const __wbg_comment_free: (a: number, b: number) => void;
export const comment_before: (a: number, b: number, c: number, d: number, e: number) => void;
export const comment_after: (a: number, b: number, c: number, d: number, e: number) => void;
export const comment_replace: (a: number, b: number, c: number, d: number, e: number) => void;
export const comment_remove: (a: number, b: number) => void;
export const comment_removed: (a: number, b: number) => void;
export const comment_text: (a: number, b: number) => void;
export const comment_set_text: (a: number, b: number, c: number, d: number) => void;
export const textchunk_text: (a: number, b: number) => void;
export const textchunk_last_in_text_node: (a: number, b: number) => void;
export const textchunk_before: (a: number, b: number, c: number, d: number, e: number) => void;
export const textchunk_removed: (a: number, b: number) => void;
export const __wbg_textchunk_free: (a: number, b: number) => void;
export const textchunk_replace: (a: number, b: number, c: number, d: number, e: number) => void;
export const textchunk_after: (a: number, b: number, c: number, d: number, e: number) => void;
export const textchunk_remove: (a: number, b: number) => void;
export const __wbg_element_free: (a: number, b: number) => void;
export const element_before: (a: number, b: number, c: number, d: number, e: number) => void;
export const element_after: (a: number, b: number, c: number, d: number, e: number) => void;
export const element_replace: (a: number, b: number, c: number, d: number, e: number) => void;
export const element_remove: (a: number, b: number) => void;
export const element_removed: (a: number, b: number) => void;
export const element_tag_name: (a: number, b: number) => void;
export const element_set_tag_name: (a: number, b: number, c: number, d: number) => void;
export const element_namespace_uri: (a: number, b: number) => void;
export const element_attributes: (a: number, b: number) => void;
export const element_getAttribute: (a: number, b: number, c: number, d: number) => void;
export const element_hasAttribute: (a: number, b: number, c: number, d: number) => void;
export const element_setAttribute: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const element_removeAttribute: (a: number, b: number, c: number, d: number) => void;
export const element_prepend: (a: number, b: number, c: number, d: number, e: number) => void;
export const element_append: (a: number, b: number, c: number, d: number, e: number) => void;
export const element_setInnerContent: (a: number, b: number, c: number, d: number, e: number) => void;
export const element_removeAndKeepContent: (a: number, b: number) => void;
export const element_onEndTag: (a: number, b: number, c: number) => void;
export const __wbg_doctype_free: (a: number, b: number) => void;
export const doctype_name: (a: number, b: number) => void;
export const doctype_public_id: (a: number, b: number) => void;
export const doctype_system_id: (a: number, b: number) => void;
export const __wbg_documentend_free: (a: number, b: number) => void;
export const documentend_append: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
